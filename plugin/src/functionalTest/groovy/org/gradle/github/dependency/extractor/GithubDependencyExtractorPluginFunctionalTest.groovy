/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.gradle.github.dependency.extractor

import groovy.json.JsonSlurper
import org.gradle.testkit.runner.BuildResult
/**
 * A simple functional test for the 'org.gradle.github.dependency.extractor.greeting' plugin.
 */
class GithubDependencyExtractorPluginFunctionalTest extends BaseFunctionalTest {

    void "can run task"() {
        given:
        // Setup the test build
        applyExtractorPlugin()
        writeString(new File(projectDir, "settings.gradle"), "");

        when:
        BuildResult result = succeed("greeting");

        then:
        result.getOutput().contains("Hello from plugin 'org.gradle.github.dependency.extractor.greeting'")
    }

    void "can resolve dependencies"() {
        // Setup the test build
        applyExtractorPlugin()
        writeString(new File(projectDir, "settings.gradle"), "")
        writeString(new File(projectDir, "build.gradle.kts"), """
        plugins {
            `java-library`
        }
        repositories {
            mavenCentral()
        }    
        dependencies {
            api("junit:junit:4.13")
        }
        """)

        when:
        // Run the build
        succeed("dependencies", "--configuration", "runtimeClasspath");

        then:
        def manifest = jsonManifest()
        manifest instanceof Map
        manifest.manifests instanceof Map
        def manifests = manifest.manifests as Map
        def runtimeClasspathManifest = manifests[":runtimeClasspath"]
        runtimeClasspathManifest instanceof Map
        runtimeClasspathManifest.name == ":runtimeClasspath"
        def file = runtimeClasspathManifest.file
        file instanceof Map
        file.source_location == "build.gradle.kts"
        def resolved = runtimeClasspathManifest.resolved
        resolved instanceof Map
        def junit = resolved["pkg:maven/junit/junit@4.13"]
        junit instanceof Map
        junit.purl == "pkg:maven/junit/junit@4.13"
        junit.relationship == "direct"
        junit.dependencies == ["pkg:maven/org.hamcrest/hamcrest-core@1.3"]
        def hamcrest = resolved["pkg:maven/org.hamcrest/hamcrest-core@1.3"]
        hamcrest instanceof Map
        hamcrest.purl == "pkg:maven/org.hamcrest/hamcrest-core@1.3"
        hamcrest.relationship == "indirect"
        hamcrest.dependencies == []
    }

}
